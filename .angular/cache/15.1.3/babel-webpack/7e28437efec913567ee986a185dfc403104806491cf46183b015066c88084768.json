{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../test.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../reservation.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../nav-bar-in/nav-bar-in.component\";\nconst _c0 = [\"trainNameRef\"];\nconst _c1 = [\"trainTimeID\"];\nconst _c2 = [\"price\"];\nconst _c3 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nfunction SquareComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 20);\n    i0.ɵɵlistener(\"click\", function SquareComponent_div_9_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r6 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.clickOnSeat(\"L\" + i_r6));\n    });\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"L\" + i_r6)(\"ngStyle\", i0.ɵɵpureFunction1(3, _c3, ctx_r0.backgroundColor));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" L \", i_r6 + 1, \" \");\n  }\n}\nfunction SquareComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 20);\n    i0.ɵɵlistener(\"click\", function SquareComponent_div_11_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const i_r10 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.clickOnSeat(\"R\" + i_r10));\n    });\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r10 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", \"R\" + i_r10)(\"ngStyle\", i0.ɵɵpureFunction1(3, _c3, ctx_r1.backgroundColor));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" R \", i_r10 + 1, \" \");\n  }\n}\nexport class SquareComponent {\n  constructor(wsService, renderer, el, router, route, reservationService) {\n    this.wsService = wsService;\n    this.renderer = renderer;\n    this.el = el;\n    this.router = router;\n    this.route = route;\n    this.reservationService = reservationService;\n    this.nameControl = new FormControl('');\n    this.items = Array.from(Array(10).keys());\n    //<div class=\"square\" *ngFor=\"let square of squares\"></div>\n    // You can use properties and methods here to keep track of the state of the square\n    this.clientID = \"\";\n    this.GameID = \"\";\n    this.playerColor = \"\";\n    this.game = null;\n    this.backgroundColor = 'white';\n    this.seats = 0;\n    this.trainID = '';\n    this.trainPrice = '';\n    this.trainTime = '';\n    this.trainName = '';\n    this.selectedSeat = [];\n    this.items = Array.from(Array(0).keys());\n    this.wsService.receive().subscribe(message => {\n      if (message.method == \"connect\") {\n        this.clientID = message.clientId;\n        const id = this.route.snapshot.paramMap.get('id');\n        this.trainID = id;\n        if (!id) {\n          alert('No id provided');\n        } else {\n          this.GameID = id;\n          this.join(id);\n        }\n      }\n      ;\n      if (message.method == \"join\") {\n        this.GameID = message.game.id;\n        this.game = message.game.clients;\n        console.log(\"You joined Successfully\");\n        message.game.clients.forEach(num => {\n          if (num.clientId == this.clientID) {\n            this.items = Array.from(Array(message.game.balls).keys());\n            this.onLoad();\n          }\n        });\n      }\n      ;\n      if (message.method == \"update\") {\n        console.log(\"Game state updated\");\n        if (!message.game.state) return;\n        Object.entries(message.game.state).forEach(([key, value]) => {\n          if (key != '') {\n            this.changeColor(key, value);\n          }\n        });\n      }\n      ;\n    });\n  }\n  ngAfterViewInit() {\n    this.trainPrice = this.route.snapshot.paramMap.get('price');\n    this.trainTime = this.route.snapshot.paramMap.get('time');\n    this.trainName = this.route.snapshot.paramMap.get('trainName');\n    console.log('View has been initialized');\n  }\n  join(id) {\n    const payLoad = {\n      method: 'join',\n      clientId: this.clientID,\n      gameId: id\n    };\n    this.wsService.send(payLoad);\n    console.log(\"send join request \");\n  }\n  onLoad() {\n    const payLoad = {\n      method: 'play',\n      clientId: this.clientID,\n      gameId: this.GameID,\n      ballId: '',\n      color: this.playerColor\n    };\n    this.wsService.send(payLoad);\n  }\n  clickOnSeat(data) {\n    console.log(\"id is \" + data);\n    this.index = this.selectedSeat.indexOf(data);\n    if (this.index !== -1) {\n      this.selectedSeat.splice(this.index, 1);\n      this.playerColor = \"white\";\n      this.seats = this.seats - 1;\n    } else {\n      this.selectedSeat.push(data);\n      this.playerColor = \"red\";\n      this.seats = this.seats + 1;\n    }\n    console.log(this.selectedSeat);\n    const payLoad = {\n      method: 'play',\n      clientId: this.clientID,\n      gameId: this.GameID,\n      ballId: data,\n      color: this.playerColor\n    };\n    this.wsService.send(payLoad);\n  }\n  changeColor(i, color) {\n    const div = document.getElementById(i);\n    this.renderer.setStyle(div, 'background-color', color);\n  }\n  unloadNotification($event) {\n    const confirmationMessage = \"Are you sure you want to leave this page? Your changes will not be saved.\";\n    $event.returnValue = confirmationMessage;\n    if (confirm(confirmationMessage)) {\n      // Perform action for leave condition\n      // this.wsService.send({ method: 'leave', clientId: this.clientID, gameId:this.GameID });\n    }\n  }\n  saveticket() {\n    if (this.trainNameElement && this.trainTimeElement && this.priceElement && this.selectedSeat) {\n      const trainName = this.trainNameElement.nativeElement.textContent;\n      const trainTimeID = this.trainTimeElement.nativeElement.textContent;\n      const price = this.priceElement.nativeElement.textContent;\n      console.log(trainName);\n      const reservation = {};\n      reservation.seats = this.selectedSeat;\n      reservation.date = \"2023-02-01\";\n      reservation.trainTime = trainTimeID;\n      reservation.trainID = trainName;\n      reservation.total = price;\n      console.log(reservation);\n      this.newReservation(reservation);\n    }\n  }\n  newReservation(reservation) {\n    this.reservationService.createReservation(reservation).subscribe({\n      next: () => {\n        this.router.navigate(['/home']);\n      },\n      error: error => {\n        alert(\"Failed to Make a Reservation\");\n        console.error(error);\n      }\n    });\n  }\n}\nSquareComponent.ɵfac = function SquareComponent_Factory(t) {\n  return new (t || SquareComponent)(i0.ɵɵdirectiveInject(i1.TestService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ReservationService));\n};\nSquareComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SquareComponent,\n  selectors: [[\"app-square\"]],\n  viewQuery: function SquareComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trainNameElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trainTimeElement = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.priceElement = _t.first);\n    }\n  },\n  hostBindings: function SquareComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"beforeunload\", function SquareComponent_beforeunload_HostBindingHandler($event) {\n        return ctx.unloadNotification($event);\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  decls: 47,\n  vars: 6,\n  consts: [[\"id\", \"divPlayers\"], [1, \"container-md\"], [1, \"card\", \"bg-light\", \"mb-8\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\", \"seat-map\"], [\"id\", \"left-hand\", 1, \"left-hand\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"jumbotron\"], [1, \"display-4\"], [1, \"lead\"], [1, \"my-4\"], [1, \"list-group\"], [1, \"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"\"], [\"trainNameRef\", \"\"], [\"trainTimeID\", \"\"], [\"price\", \"\"], [\"type\", \"button\", 1, \"list-group-item\", \"list-group-item-action\", \"active\", \"text-center\", 3, \"click\"], [1, \"square\", 3, \"id\", \"ngStyle\", \"click\"]],\n  template: function SquareComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-nav-bar-in\")(1, \"div\", 0)(2, \"br\");\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3);\n      i0.ɵɵtext(6, \"Class A\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5);\n      i0.ɵɵtemplate(9, SquareComponent_div_9_Template, 4, 5, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 5);\n      i0.ɵɵtemplate(11, SquareComponent_div_11_Template, 4, 5, \"div\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(12, \"br\");\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"div\", 4)(15, \"div\", 7)(16, \"div\", 8)(17, \"div\", 9)(18, \"h1\", 10);\n      i0.ɵɵtext(19, \"Welcome to Sri Lanka Railways\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"p\", 11);\n      i0.ɵɵtext(21, \"Online Advance Train Seats Reservation.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"hr\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 8)(24, \"ul\", 13)(25, \"li\", 14);\n      i0.ɵɵtext(26, \" Train No \");\n      i0.ɵɵelementStart(27, \"span\", 15, 16);\n      i0.ɵɵtext(29);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"li\", 14);\n      i0.ɵɵtext(31, \" Time \");\n      i0.ɵɵelementStart(32, \"span\", 15, 17);\n      i0.ɵɵtext(34);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"li\", 14);\n      i0.ɵɵtext(36, \" Seats \");\n      i0.ɵɵelementStart(37, \"span\", 15);\n      i0.ɵɵtext(38);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"li\", 14);\n      i0.ɵɵtext(40, \" Total \");\n      i0.ɵɵelementStart(41, \"span\", 15, 18);\n      i0.ɵɵtext(43);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(44, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function SquareComponent_Template_button_click_44_listener() {\n        return ctx.saveticket();\n      });\n      i0.ɵɵtext(45, \" Get Your Ticket \");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(46, \"br\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n      i0.ɵɵadvance(18);\n      i0.ɵɵtextInterpolate(ctx.trainName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.trainTime);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.seats);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"Rs \", ctx.seats * ctx.trainPrice, \"\");\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgStyle, i5.NavBarInComponent],\n  styles: [\".left-hand[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.left-hand[_ngcontent-%COMP%]:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.square[_ngcontent-%COMP%] {\\r\\n  height: 70px;\\r\\n  margin-right: 10px;\\r\\n  cursor: pointer;\\r\\n  flex: 0 10 auto;\\r\\n  background-color: #b4b4b4 ;\\r\\n  margin-bottom: 10px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  font-weight: 600;\\r\\n  }\\r\\n\\r\\n.square[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #ec4545 !important;\\r\\n  color: #fff;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VhdC1vcmRlci9zcXVhcmUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsZUFBZTtFQUNmLDBCQUEwQjtFQUMxQixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsZ0JBQWdCO0VBQ2hCOztBQUVGO0VBQ0Usb0NBQW9DO0VBQ3BDLFdBQVc7RUFDWCIsInNvdXJjZXNDb250ZW50IjpbIi5sZWZ0LWhhbmQge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbn1cclxuXHJcbi5sZWZ0LWhhbmQ6bGFzdC1jaGlsZCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxuLnNxdWFyZSB7XHJcbiAgaGVpZ2h0OiA3MHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZmxleDogMCAxMCBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNiNGI0YjQgO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgfVxyXG5cclxuLnNxdWFyZTpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VjNDU0NSAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,gBAAgB;;;;;;;;;;;;;;;;;;ICS3BC,2BAA8C;IAErBA;MAAA;MAAA;MAAA;MAAA,OAASA,kCAAY,GAAG,QAAG;IAAA,EAAC;IAC9CA,4BAAM;IACHA,YACH;IAAAA,iBAAO;;;;;IAHyCA,eAAY;IAAZA,+BAAY;IAEzDA,eACH;IADGA,2CACH;;;;;;IAWTA,2BAA8C;IAEpBA;MAAA;MAAA;MAAA;MAAA,OAASA,mCAAY,GAAG,SAAG;IAAA,EAAC;IACjDA,4BAAM;IACFA,YACH;IAAAA,iBAAO;;;;;IAH2CA,eAAY;IAAZA,gCAAY;IAE3DA,eACH;IADGA,4CACH;;;ADpBrB,OAAM,MAAOC,eAAe;EA0BzBC,YAAoBC,SAAsB,EAASC,QAAmB,EAAUC,EAAc,EAASC,MAAc,EAC5GC,KAAqB,EAASC,kBAAsC;IADzD,cAAS,GAATL,SAAS;IAAsB,aAAQ,GAARC,QAAQ;IAAqB,OAAE,GAAFC,EAAE;IAAqB,WAAM,GAANC,MAAM;IACpG,UAAK,GAALC,KAAK;IAAyB,uBAAkB,GAAlBC,kBAAkB;IA1B1D,gBAAW,GAAG,IAAIT,WAAW,CAAC,EAAE,CAAC;IACjC,UAAK,GAAEU,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,EAAE,CAAC,CAACE,IAAI,EAAE,CAAC;IACnC;IACA;IACS,aAAQ,GAAC,EAAE;IACX,WAAM,GAAC,EAAE;IACT,gBAAW,GAAC,EAAE;IACd,SAAI,GAAC,IAAI;IACjB,oBAAe,GAAW,OAAO;IAEjC,UAAK,GAAQ,CAAC;IACd,YAAO,GAAK,EAAE;IACd,eAAU,GAAK,EAAE;IACjB,cAAS,GAAK,EAAE;IAChB,cAAS,GAAK,EAAE;IAEhB,iBAAY,GAAa,EAAE;IAW1B,IAAI,CAACC,KAAK,GAACH,KAAK,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE,CAAC;IACtC,IAAI,CAACR,SAAS,CAACU,OAAO,EAAE,CAACC,SAAS,CAACC,OAAO,IAAG;MAC3C,IAAGA,OAAO,CAACC,MAAM,IAAE,SAAS,EAAC;QAE3B,IAAI,CAACC,QAAQ,GAACF,OAAO,CAACG,QAAQ;QAE9B,MAAMC,EAAE,GAAG,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;QACjD,IAAI,CAACC,OAAO,GAACJ,EAAE;QACf,IAAI,CAACA,EAAE,EAAE;UACPK,KAAK,CAAC,gBAAgB,CAAC;SACxB,MACG;UACF,IAAI,CAACC,MAAM,GAACN,EAAE;UACd,IAAI,CAACO,IAAI,CAACP,EAAE,CAAC;;;MAChB;MAED,IAAGJ,OAAO,CAACC,MAAM,IAAE,MAAM,EAAC;QACxB,IAAI,CAACS,MAAM,GAACV,OAAO,CAACY,IAAI,CAACR,EAAE;QAC3B,IAAI,CAACQ,IAAI,GAACZ,OAAO,CAACY,IAAI,CAACC,OAAO;QAC9BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtCf,OAAO,CAACY,IAAI,CAACC,OAAO,CAACG,OAAO,CAAEC,GAAQ,IAAI;UAExC,IAAGA,GAAG,CAACd,QAAQ,IAAE,IAAI,CAACD,QAAQ,EAAC;YAC7B,IAAI,CAACL,KAAK,GAAEH,KAAK,CAACC,IAAI,CAACD,KAAK,CAACM,OAAO,CAACY,IAAI,CAACM,KAAK,CAAC,CAACtB,IAAI,EAAE,CAAC;YACxD,IAAI,CAACuB,MAAM,EAAE;;QAEjB,CAAC,CAAC;;MAEH;MACD,IAAGnB,OAAO,CAACC,MAAM,IAAE,QAAQ,EAAC;QAE1Ba,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjC,IAAI,CAACf,OAAO,CAACY,IAAI,CAACQ,KAAK,EAAE;QACvBC,MAAM,CAACC,OAAO,CAACtB,OAAO,CAACY,IAAI,CAACQ,KAAK,CAAC,CAACJ,OAAO,CAAC,CAAC,CAACO,GAAG,EAAEC,KAAK,CAAC,KAAI;UAE5D,IAAGD,GAAG,IAAE,EAAE,EAAC;YACX,IAAI,CAACE,WAAW,CAACF,GAAG,EAACC,KAAK,CAAC;;QAE7B,CAAC,CAAC;;MAGH;IACH,CAAC,CAAC;EAGJ;EAEAE,eAAe;IAEb,IAAI,CAACC,UAAU,GAAC,IAAI,CAACnC,KAAK,CAACa,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,OAAO,CAAC;IACzD,IAAI,CAACqB,SAAS,GAAC,IAAI,CAACpC,KAAK,CAACa,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,MAAM,CAAC;IACvD,IAAI,CAACsB,SAAS,GAAC,IAAI,CAACrC,KAAK,CAACa,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,WAAW,CAAC;IAC5DO,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAE1C;EAGAJ,IAAI,CAACP,EAAM;IAET,MAAM0B,OAAO,GAAG;MACd7B,MAAM,EAAE,MAAM;MACdE,QAAQ,EAAE,IAAI,CAACD,QAAQ;MACvB6B,MAAM,EAAC3B;KACR;IACD,IAAI,CAAChB,SAAS,CAAC4C,IAAI,CAACF,OAAO,CAAC;IAC5BhB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC;EAEAI,MAAM;IACJ,MAAMW,OAAO,GAAG;MACd7B,MAAM,EAAE,MAAM;MACdE,QAAQ,EAAE,IAAI,CAACD,QAAQ;MACvB6B,MAAM,EAAC,IAAI,CAACrB,MAAM;MAClBuB,MAAM,EAAC,EAAE;MACTC,KAAK,EAAC,IAAI,CAACC;KACZ;IACD,IAAI,CAAC/C,SAAS,CAAC4C,IAAI,CAACF,OAAO,CAAC;EAC9B;EAEAM,WAAW,CAACC,IAAS;IAEnBvB,OAAO,CAACC,GAAG,CAAC,QAAQ,GAACsB,IAAI,CAAC;IAC1B,IAAI,CAACC,KAAK,GAAC,IAAI,CAACC,YAAY,CAACC,OAAO,CAACH,IAAI,CAAC;IAC1C,IAAI,IAAI,CAACC,KAAK,KAAK,CAAC,CAAC,EAAE;MACrB,IAAI,CAACC,YAAY,CAACE,MAAM,CAAC,IAAI,CAACH,KAAK,EAAE,CAAC,CAAC;MACvC,IAAI,CAACH,WAAW,GAAC,OAAO;MACxB,IAAI,CAACO,KAAK,GAAC,IAAI,CAACA,KAAK,GAAC,CAAC;KACxB,MAAI;MACH,IAAI,CAACH,YAAY,CAACI,IAAI,CAACN,IAAI,CAAC;MAC5B,IAAI,CAACF,WAAW,GAAC,KAAK;MACtB,IAAI,CAACO,KAAK,GAAC,IAAI,CAACA,KAAK,GAAC,CAAC;;IAEzB5B,OAAO,CAACC,GAAG,CAAC,IAAI,CAACwB,YAAY,CAAC;IAC9B,MAAMT,OAAO,GAAG;MAChB7B,MAAM,EAAE,MAAM;MACdE,QAAQ,EAAE,IAAI,CAACD,QAAQ;MACvB6B,MAAM,EAAC,IAAI,CAACrB,MAAM;MAClBuB,MAAM,EAACI,IAAI;MACXH,KAAK,EAAC,IAAI,CAACC;KACV;IACD,IAAI,CAAC/C,SAAS,CAAC4C,IAAI,CAACF,OAAO,CAAC;EAC9B;EAEAL,WAAW,CAACmB,CAAM,EAACV,KAAU;IAE3B,MAAMW,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAACH,CAAC,CAAC;IACtC,IAAI,CAACvD,QAAQ,CAAC2D,QAAQ,CAACH,GAAG,EAAE,kBAAkB,EAAEX,KAAK,CAAC;EAExD;EAGAe,kBAAkB,CAACC,MAAW;IAC5B,MAAMC,mBAAmB,GAAG,2EAA2E;IACvGD,MAAM,CAACE,WAAW,GAAGD,mBAAmB;IACxC,IAAGE,OAAO,CAACF,mBAAmB,CAAC,EAAC;MAC5B;MACD;IAAA;EAEL;EAGAG,UAAU;IACR,IAAG,IAAI,CAACC,gBAAgB,IAAI,IAAI,CAACC,gBAAgB,IAAI,IAAI,CAACC,YAAY,IAAI,IAAI,CAAClB,YAAY,EAAC;MAC5F,MAAMV,SAAS,GAAG,IAAI,CAAC0B,gBAAgB,CAACG,aAAa,CAACC,WAAW;MACjE,MAAMC,WAAW,GAAG,IAAI,CAACJ,gBAAgB,CAACE,aAAa,CAACC,WAAW;MACnE,MAAME,KAAK,GAAG,IAAI,CAACJ,YAAY,CAACC,aAAa,CAACC,WAAW;MACzD7C,OAAO,CAACC,GAAG,CAACc,SAAS,CAAC;MAEtB,MAAMiC,WAAW,GAAgB,EAAE;MACnCA,WAAW,CAACpB,KAAK,GAAG,IAAI,CAACH,YAAY;MACrCuB,WAAW,CAACC,IAAI,GAAG,YAAY;MAC/BD,WAAW,CAAClC,SAAS,GAAGgC,WAAW;MACnCE,WAAW,CAACtD,OAAO,GAAGqB,SAAS;MAC/BiC,WAAW,CAACE,KAAK,GAAGH,KAAK;MAEzB/C,OAAO,CAACC,GAAG,CAAC+C,WAAW,CAAC;MACxB,IAAI,CAACG,cAAc,CAACH,WAAW,CAAC;;EAGlC;EAEAG,cAAc,CAACH,WAAwB;IACrC,IAAI,CAACrE,kBAAkB,CAACyE,iBAAiB,CAACJ,WAAW,CAAC,CACnD/D,SAAS,CAAC;MACToE,IAAI,EAAE,MAAK;QACT,IAAI,CAAC5E,MAAM,CAAC6E,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf5D,KAAK,CAAC,8BAA8B,CAAC;QACrCK,OAAO,CAACuD,KAAK,CAACA,KAAK,CAAC;MACtB;KACD,CAAC;EACN;;AApLWnF,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAoF;EAAAC;IAAA;;;;;;;;;;;;;;;eAAfC,8BAA0B;MAAA;;;;;;;;MCTvCvF,iCAAiC;MAGjCA,8BAA0B;MAEmBA,uBAAO;MAAAA,iBAAM;MAClDA,8BAAgC;MAEvBA,gEAOK;MAMXA,iBAAM;MAENA,+BAAuC;MACnCA,kEAOO;MACVA,iBAAM;MAMdA,sBAAI;MACJA,+BAAiC;MAOKA,8CAA6B;MAAAA,iBAAK;MACxDA,8BAAgB;MAAAA,wDAAuC;MAAAA,iBAAI;MAC3DA,0BAAiB;MAGnBA,iBAAM;MAEhBA,+BAAsB;MAGVA,2BACF;MAAAA,qCAA6B;MAAAA,aAAa;MAAAA,iBAAO;MAEnDA,+BAA8E;MAC1EA,uBACF;MAAAA,qCAA4B;MAAAA,aAAa;MAAAA,iBAAO;MAElDA,+BAA8E;MAC1EA,wBACF;MAAAA,iCAAe;MAAAA,aAAS;MAAAA,iBAAO;MAEjCA,+BAA8E;MAC1EA,wBACF;MAAAA,qCAAsB;MAAAA,aAAuB;MAAAA,iBAAO;MAEtDA,mCAA+G;MAAzFA;QAAA,OAASuF,gBAAY;MAAA,EAAC;MACxCvF,kCACF;MAAAA,iBAAS;MAQvBA,sBAAI;MACRA,iBAAM;;;MA1EmCA,eAAS;MAATA,mCAAS;MAgBXA,eAAS;MAATA,mCAAS;MAiCDA,gBAAa;MAAbA,mCAAa;MAIdA,eAAa;MAAbA,mCAAa;MAI1BA,eAAS;MAATA,+BAAS;MAIFA,eAAuB;MAAvBA,4DAAuB","names":["FormControl","i0","SquareComponent","constructor","wsService","renderer","el","router","route","reservationService","Array","from","keys","items","receive","subscribe","message","method","clientID","clientId","id","snapshot","paramMap","get","trainID","alert","GameID","join","game","clients","console","log","forEach","num","balls","onLoad","state","Object","entries","key","value","changeColor","ngAfterViewInit","trainPrice","trainTime","trainName","payLoad","gameId","send","ballId","color","playerColor","clickOnSeat","data","index","selectedSeat","indexOf","splice","seats","push","i","div","document","getElementById","setStyle","unloadNotification","$event","confirmationMessage","returnValue","confirm","saveticket","trainNameElement","trainTimeElement","priceElement","nativeElement","textContent","trainTimeID","price","reservation","date","total","newReservation","createReservation","next","navigate","error","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["D:\\KASUN\\NSBM 3rd Year\\FullStackDev\\mean-stack-publish\\mean-stack-publish\\mean-stack-example\\client\\src\\app\\seat-order\\seat-order.component.ts","D:\\KASUN\\NSBM 3rd Year\\FullStackDev\\mean-stack-publish\\mean-stack-publish\\mean-stack-example\\client\\src\\app\\seat-order\\seat-order.component.html"],"sourcesContent":["import { Component, Renderer2, ElementRef, AfterViewInit, HostListener,ViewChild  } from '@angular/core';\nimport { TestService } from '../test.service';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Reservation } from '../reservation';\nimport { ReservationService } from '../reservation.service';\n\n@Component({\n  selector: 'app-square',\n  templateUrl: './seat-order.component.html',\n  styleUrls: ['square.component.css']\n})\nexport class SquareComponent implements AfterViewInit{\n  nameControl = new FormControl('');\n  items =Array.from(Array(10).keys());\n  //<div class=\"square\" *ngFor=\"let square of squares\"></div>\n  // You can use properties and methods here to keep track of the state of the square\n   private clientID=\"\";\n   private GameID=\"\";\n   private playerColor=\"\";\n   private game=null;\n   backgroundColor: string = 'white';\n\n   seats:number=0;\n   trainID:any='';\n   trainPrice:any='';\n   trainTime:any='';\n   trainName:any='';\n\n   selectedSeat: string[] = [];\n\n    index?: number;\n\n    @ViewChild('trainNameRef') trainNameElement?: ElementRef;\n    @ViewChild('trainTimeID') trainTimeElement?: ElementRef;\n    @ViewChild('price') priceElement?: ElementRef;\n    \n\n   constructor(private wsService: TestService,private renderer: Renderer2, private el: ElementRef,private router: Router,\n    private route: ActivatedRoute,private reservationService: ReservationService) {\n    this.items=Array.from(Array(0).keys());\n    this.wsService.receive().subscribe(message => {\n      if(message.method==\"connect\"){\n\n        this.clientID=message.clientId;\n\n        const id = this.route.snapshot.paramMap.get('id');\n        this.trainID=id;\n        if (!id) {\n          alert('No id provided');\n        }\n        else{ \n          this.GameID=id;\n          this.join(id);}\n      };\n\n      if(message.method==\"join\"){\n        this.GameID=message.game.id;\n        this.game=message.game.clients;\n        console.log(\"You joined Successfully\");\n        message.game.clients.forEach((num: any) => {\n\n          if(num.clientId==this.clientID){\n            this.items =Array.from(Array(message.game.balls).keys());\n            this.onLoad();\n          }\n        });\n\n      };\n      if(message.method==\"update\"){\n\n        console.log(\"Game state updated\");\n        if (!message.game.state) return;\n          Object.entries(message.game.state).forEach(([key, value]) => {\n\n          if(key!=''){\n          this.changeColor(key,value);\n        }\n        });\n\n\n      };\n    });\n\n    \n  }\n\n  ngAfterViewInit() {\n\n    this.trainPrice=this.route.snapshot.paramMap.get('price');\n    this.trainTime=this.route.snapshot.paramMap.get('time');\n    this.trainName=this.route.snapshot.paramMap.get('trainName');\n    console.log('View has been initialized');\n \n  }\n\n\n  join(id:any) {\n\n    const payLoad = {\n      method: 'join',\n      clientId: this.clientID,\n      gameId:id,\n    };\n    this.wsService.send(payLoad);\n    console.log(\"send join request \")\n  }\n\n  onLoad(){\n    const payLoad = {\n      method: 'play',\n      clientId: this.clientID,\n      gameId:this.GameID,\n      ballId:'',\n      color:this.playerColor\n    };\n    this.wsService.send(payLoad);\n  }\n\n  clickOnSeat(data: any) {\n   \n    console.log(\"id is \"+data)\n    this.index=this.selectedSeat.indexOf(data);\n    if (this.index !== -1) {\n      this.selectedSeat.splice(this.index, 1);\n      this.playerColor=\"white\"\n      this.seats=this.seats-1\n    }else{\n      this.selectedSeat.push(data);\n      this.playerColor=\"red\"\n      this.seats=this.seats+1\n    }\n    console.log(this.selectedSeat);\n    const payLoad = {\n    method: 'play',\n    clientId: this.clientID,\n    gameId:this.GameID,\n    ballId:data,\n    color:this.playerColor\n    };\n    this.wsService.send(payLoad);\n  }\n\n  changeColor(i: any,color: any) {\n\n    const div = document.getElementById(i);\n    this.renderer.setStyle(div, 'background-color', color);\n   \n  }\n\n  @HostListener('window:beforeunload', ['$event'])\n  unloadNotification($event: any) {\n    const confirmationMessage = \"Are you sure you want to leave this page? Your changes will not be saved.\";\n    $event.returnValue = confirmationMessage;\n    if(confirm(confirmationMessage)){\n        // Perform action for leave condition\n       // this.wsService.send({ method: 'leave', clientId: this.clientID, gameId:this.GameID });\n    }\n  }\n\n\n  saveticket(){\n    if(this.trainNameElement && this.trainTimeElement && this.priceElement && this.selectedSeat){\n    const trainName = this.trainNameElement.nativeElement.textContent;\n    const trainTimeID = this.trainTimeElement.nativeElement.textContent;\n    const price = this.priceElement.nativeElement.textContent;\n    console.log(trainName);\n\n    const reservation: Reservation = {};\n    reservation.seats = this.selectedSeat;\n    reservation.date = \"2023-02-01\";\n    reservation.trainTime = trainTimeID;\n    reservation.trainID = trainName;\n    reservation.total = price;\n\n    console.log(reservation);\n    this.newReservation(reservation)\n\n    }\n  }\n\n  newReservation(reservation: Reservation) {\n    this.reservationService.createReservation(reservation)\n      .subscribe({\n        next: () => {\n          this.router.navigate(['/home']);\n        },\n        error: (error) => {\n          alert(\"Failed to Make a Reservation\");\n          console.error(error);\n        }\n      });\n  }\n  \n\n\n}\n","<!-- <button id = 'btnCreate' (click)=\"send()\">New Game</button>\r\n <button id = 'btnJoin' (click)=\"join()\">Join Game</button> -->\r\n<!-- <input type = 'text' [formControl]=\"nameControl\" id = 'txtGameId'> --> \r\n<app-nav-bar-in></app-nav-bar-in>\r\n<div id  = 'divPlayers'></div>\r\n<br>\r\n<div class=\"container-md\">\r\n    <div class=\"card bg-light mb-8\" >\r\n        <div class=\"card-header text-center\">Class A</div>\r\n        <div class=\"card-body seat-map\">\r\n            <div id ='left-hand' class=\"left-hand\">\r\n                 <div   *ngFor=\"let item of items;let i=index\">\r\n                     <!-- <div [id]=\"i\" class='square'  (click)=\"clickOnSeat(i)\" [ngStyle]=\"{'background-color': backgroundColor}\"></div> -->\r\n                     <div class='square'  (click)=\"clickOnSeat('L'+i)\"  [id]=\"'L'+i\" [ngStyle]=\"{'background-color': backgroundColor}\">\r\n                        <span>\r\n                           L {{i+1}}\r\n                        </span>\r\n                    </div>\r\n                </div>                            \r\n                <!-- <div class='square' *ngFor=\"let item of items;let i=index\" (click)=\"clickOnSeat(i)\"  [id]=\"i\" [ngStyle]=\"{'background-color': backgroundColor}\">\r\n                    <span>\r\n                       L {{i+1}}\r\n                    </span>\r\n                </div> -->\r\n           </div>\r\n\r\n           <div id ='left-hand' class=\"left-hand\">\r\n               <div   *ngFor=\"let item of items;let i=index\">\r\n                <!-- <div class='square' *ngFor=\"let item of items;let i=index\"   [ngStyle]=\"{'background-color': backgroundColor}\"> -->\r\n                    <div class='square'  (click)=\"clickOnSeat('R'+i)\"  [id]=\"'R'+i\" [ngStyle]=\"{'background-color': backgroundColor}\">\r\n                    <span>\r\n                        R {{i+1}}\r\n                     </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n         \r\n        </div>\r\n    </div>\r\n\r\n    <br>\r\n    <div class=\"card bg-light mb-8\" >\r\n        <!-- <div class=\"card-header text-center\">Ticket Details</div> -->\r\n        <div class=\"card-body seat-map\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n\r\n                <div class=\"jumbotron\">\r\n                    <h1 class=\"display-4\">Welcome to Sri Lanka Railways</h1>\r\n                    <p class=\"lead\">Online Advance Train Seats Reservation.</p>\r\n                    <hr class=\"my-4\">\r\n                  \r\n\r\n                  </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <ul class=\"list-group\">\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    Train No\r\n                  <span class=\"\" #trainNameRef>{{trainName}}</span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    Time\r\n                  <span class=\"\" #trainTimeID>{{trainTime}}</span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    Seats\r\n                  <span class=\"\">{{seats}}</span>\r\n                </li>\r\n                <li class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                    Total\r\n                  <span class=\"\" #price>Rs {{seats*trainPrice}}</span>\r\n                </li>\r\n                <button type=\"button\" (click)=\"saveticket()\" class=\"list-group-item list-group-item-action active text-center\">\r\n                    Get Your Ticket\r\n                  </button>\r\n              </ul>\r\n              \r\n        </div>\r\n       </div>\r\n     \r\n        </div>\r\n    </div>\r\n    <br>\r\n</div>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}